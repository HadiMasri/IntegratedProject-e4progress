// <auto-generated />
using System;
using E4Progress.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace E4Progress.DAL.Migrations
{
    [DbContext(typeof(E4ProgressDBContext))]
    partial class E4ProgressDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("E4Progress.DAL.Entities.Content_Element_Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("tbl_content_element_types");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Quiz"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Test yourself"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Exam business"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Exam school"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Lesson fiche"
                        });
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Content_Element_Type_Translation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Content_Element_TypeId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Translation")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Content_Element_TypeId");

                    b.HasIndex("LanguageId");

                    b.ToTable("tbl_content_element_type_translations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content_Element_TypeId = 1,
                            LanguageId = 1,
                            Translation = "Quiz"
                        },
                        new
                        {
                            Id = 2,
                            Content_Element_TypeId = 1,
                            LanguageId = 2,
                            Translation = "Quiz"
                        },
                        new
                        {
                            Id = 3,
                            Content_Element_TypeId = 1,
                            LanguageId = 3,
                            Translation = "Quiz"
                        },
                        new
                        {
                            Id = 4,
                            Content_Element_TypeId = 2,
                            LanguageId = 1,
                            Translation = "Test yourself"
                        },
                        new
                        {
                            Id = 5,
                            Content_Element_TypeId = 2,
                            LanguageId = 2,
                            Translation = "Toets jezelf"
                        },
                        new
                        {
                            Id = 6,
                            Content_Element_TypeId = 2,
                            LanguageId = 3,
                            Translation = "Testez vous"
                        },
                        new
                        {
                            Id = 7,
                            Content_Element_TypeId = 3,
                            LanguageId = 1,
                            Translation = "Exam business"
                        },
                        new
                        {
                            Id = 8,
                            Content_Element_TypeId = 3,
                            LanguageId = 2,
                            Translation = "Examen business"
                        },
                        new
                        {
                            Id = 9,
                            Content_Element_TypeId = 3,
                            LanguageId = 3,
                            Translation = "Examen d’entreprise"
                        },
                        new
                        {
                            Id = 10,
                            Content_Element_TypeId = 4,
                            LanguageId = 1,
                            Translation = "Exam school"
                        },
                        new
                        {
                            Id = 11,
                            Content_Element_TypeId = 4,
                            LanguageId = 2,
                            Translation = "Examen school"
                        },
                        new
                        {
                            Id = 12,
                            Content_Element_TypeId = 4,
                            LanguageId = 3,
                            Translation = "Examen scolaire"
                        },
                        new
                        {
                            Id = 13,
                            Content_Element_TypeId = 5,
                            LanguageId = 1,
                            Translation = "Lesson fiche"
                        },
                        new
                        {
                            Id = 14,
                            Content_Element_TypeId = 5,
                            LanguageId = 2,
                            Translation = "Lesfiche"
                        },
                        new
                        {
                            Id = 15,
                            Content_Element_TypeId = 5,
                            LanguageId = 3,
                            Translation = "Fiche de cours"
                        });
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Content_Theme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("tbl_content_themes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Medieval"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Halloween"
                        });
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Content_Theme_Translation", b =>
                {
                    b.Property<int>("Content_Theme_Id")
                        .HasColumnType("int");

                    b.Property<int>("Language_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Content_ThemeId")
                        .HasColumnType("int");

                    b.Property<int?>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Translation")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.HasKey("Content_Theme_Id", "Language_Id");

                    b.HasIndex("Content_ThemeId");

                    b.HasIndex("LanguageId");

                    b.ToTable("tbl_content_theme_translations");
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Created_By")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created_On")
                        .HasColumnType("date");

                    b.Property<string>("Icon")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Instruction_LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Office_ApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("ReplicationKey")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("UserInterface_LanguageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Instruction_LanguageId");

                    b.HasIndex("Office_ApplicationId");

                    b.HasIndex("ReplicationKey")
                        .IsUnique();

                    b.HasIndex("UserInterface_LanguageId");

                    b.ToTable("tbl_courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_By = 1,
                            Created_On = new DateTime(2021, 1, 4, 13, 53, 3, 473, DateTimeKind.Local).AddTicks(1631),
                            Icon = "",
                            Instruction_LanguageId = 1,
                            Name = "Algebra",
                            Office_ApplicationId = 1,
                            ReplicationKey = "EF101",
                            UserInterface_LanguageId = 1
                        },
                        new
                        {
                            Id = 2,
                            Created_By = 1,
                            Created_On = new DateTime(2021, 1, 4, 13, 53, 3, 475, DateTimeKind.Local).AddTicks(3053),
                            Icon = "",
                            Instruction_LanguageId = 1,
                            Name = "Yaman",
                            Office_ApplicationId = 1,
                            ReplicationKey = "EF102",
                            UserInterface_LanguageId = 1
                        },
                        new
                        {
                            Id = 3,
                            Created_By = 1,
                            Created_On = new DateTime(2021, 1, 4, 13, 53, 3, 475, DateTimeKind.Local).AddTicks(3093),
                            Icon = "",
                            Instruction_LanguageId = 1,
                            Name = "Arabic",
                            Office_ApplicationId = 1,
                            ReplicationKey = "EF103",
                            UserInterface_LanguageId = 1
                        });
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Course_Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("integer");

                    b.Property<int>("Sortorder")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId", "Title", "Sortorder")
                        .IsUnique();

                    b.ToTable("tbl_course_modules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Sortorder = 1,
                            Title = "Part One"
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 1,
                            Sortorder = 1,
                            Title = "Part Two"
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 2,
                            Sortorder = 1,
                            Title = "Part Three"
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 2,
                            Sortorder = 1,
                            Title = "Part Four"
                        });
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Course_Module_Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Course_ModuleId")
                        .HasColumnType("integer");

                    b.Property<int>("Sortorder")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Course_ModuleId", "Title", "Sortorder")
                        .IsUnique();

                    b.ToTable("tbl_course_module_topics");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Course_ModuleId = 1,
                            Sortorder = 1,
                            Title = "Multiply"
                        },
                        new
                        {
                            Id = 2,
                            Course_ModuleId = 1,
                            Sortorder = 2,
                            Title = "Divide"
                        },
                        new
                        {
                            Id = 3,
                            Course_ModuleId = 1,
                            Sortorder = 3,
                            Title = "Power"
                        },
                        new
                        {
                            Id = 4,
                            Course_ModuleId = 2,
                            Sortorder = 1,
                            Title = "jon"
                        },
                        new
                        {
                            Id = 5,
                            Course_ModuleId = 2,
                            Sortorder = 4,
                            Title = "nick "
                        },
                        new
                        {
                            Id = 6,
                            Course_ModuleId = 3,
                            Sortorder = 5,
                            Title = "brick"
                        });
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Course_Module_Topic_Element", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Content_ElementId")
                        .HasColumnType("integer");

                    b.Property<int>("Content_Element_TypeId")
                        .HasColumnType("integer");

                    b.Property<int>("Course_Module_TopicId")
                        .HasColumnType("integer");

                    b.Property<int>("Difficulty_LevelId")
                        .HasColumnType("integer");

                    b.Property<int>("Sortorder")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Course_Module_TopicId");

                    b.HasIndex("Difficulty_LevelId");

                    b.HasIndex("Content_Element_TypeId", "Course_Module_TopicId", "Content_ElementId")
                        .IsUnique();

                    b.ToTable("tbl_course_module_topic_elements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content_ElementId = 1,
                            Content_Element_TypeId = 1,
                            Course_Module_TopicId = 1,
                            Difficulty_LevelId = 1,
                            Sortorder = 1
                        },
                        new
                        {
                            Id = 2,
                            Content_ElementId = 2,
                            Content_Element_TypeId = 1,
                            Course_Module_TopicId = 1,
                            Difficulty_LevelId = 1,
                            Sortorder = 1
                        },
                        new
                        {
                            Id = 3,
                            Content_ElementId = 3,
                            Content_Element_TypeId = 1,
                            Course_Module_TopicId = 2,
                            Difficulty_LevelId = 1,
                            Sortorder = 1
                        });
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Didactical_Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("tbl_didactical_models");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bloom"
                        },
                        new
                        {
                            Id = 2,
                            Name = "EVA"
                        });
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Didactical_Model_Level", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Didactical_ModelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<int>("Sortorder")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Didactical_ModelId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Sortorder");

                    b.ToTable("tbl_didactical_model_levels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Didactical_ModelId = 1,
                            Name = "Remember",
                            Sortorder = 1
                        },
                        new
                        {
                            Id = 2,
                            Didactical_ModelId = 1,
                            Name = "Understand",
                            Sortorder = 2
                        },
                        new
                        {
                            Id = 3,
                            Didactical_ModelId = 1,
                            Name = "Apply",
                            Sortorder = 3
                        },
                        new
                        {
                            Id = 4,
                            Didactical_ModelId = 1,
                            Name = "Analyze",
                            Sortorder = 4
                        },
                        new
                        {
                            Id = 5,
                            Didactical_ModelId = 1,
                            Name = "Evaluate",
                            Sortorder = 5
                        },
                        new
                        {
                            Id = 6,
                            Didactical_ModelId = 1,
                            Name = "Create",
                            Sortorder = 6
                        },
                        new
                        {
                            Id = 7,
                            Didactical_ModelId = 2,
                            Name = "Low",
                            Sortorder = 1
                        },
                        new
                        {
                            Id = 8,
                            Didactical_ModelId = 2,
                            Name = "Average",
                            Sortorder = 2
                        },
                        new
                        {
                            Id = 9,
                            Didactical_ModelId = 2,
                            Name = "High",
                            Sortorder = 3
                        });
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Didactical_Model_Level_Translation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Didactical_Model_LevelId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Translation")
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Didactical_Model_LevelId");

                    b.HasIndex("LanguageId");

                    b.ToTable("tbl_didactical_model_level_translations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Didactical_Model_LevelId = 1,
                            LanguageId = 1,
                            Translation = "Remember"
                        },
                        new
                        {
                            Id = 2,
                            Didactical_Model_LevelId = 1,
                            LanguageId = 2,
                            Translation = "Onthouden"
                        },
                        new
                        {
                            Id = 3,
                            Didactical_Model_LevelId = 1,
                            LanguageId = 3,
                            Translation = "Mémoriser"
                        },
                        new
                        {
                            Id = 4,
                            Didactical_Model_LevelId = 2,
                            LanguageId = 1,
                            Translation = "Understand"
                        },
                        new
                        {
                            Id = 5,
                            Didactical_Model_LevelId = 2,
                            LanguageId = 2,
                            Translation = "Begrijpen"
                        },
                        new
                        {
                            Id = 6,
                            Didactical_Model_LevelId = 2,
                            LanguageId = 3,
                            Translation = "Comprendre"
                        },
                        new
                        {
                            Id = 7,
                            Didactical_Model_LevelId = 3,
                            LanguageId = 1,
                            Translation = "Apply"
                        },
                        new
                        {
                            Id = 8,
                            Didactical_Model_LevelId = 3,
                            LanguageId = 2,
                            Translation = "Toepassen"
                        },
                        new
                        {
                            Id = 9,
                            Didactical_Model_LevelId = 3,
                            LanguageId = 3,
                            Translation = "Appliquer"
                        },
                        new
                        {
                            Id = 10,
                            Didactical_Model_LevelId = 4,
                            LanguageId = 1,
                            Translation = "Analyze"
                        },
                        new
                        {
                            Id = 11,
                            Didactical_Model_LevelId = 4,
                            LanguageId = 2,
                            Translation = "Analyseren"
                        },
                        new
                        {
                            Id = 12,
                            Didactical_Model_LevelId = 4,
                            LanguageId = 3,
                            Translation = "Analyser"
                        },
                        new
                        {
                            Id = 13,
                            Didactical_Model_LevelId = 5,
                            LanguageId = 1,
                            Translation = "Evaluate"
                        },
                        new
                        {
                            Id = 14,
                            Didactical_Model_LevelId = 5,
                            LanguageId = 2,
                            Translation = "Evalueren"
                        },
                        new
                        {
                            Id = 15,
                            Didactical_Model_LevelId = 5,
                            LanguageId = 3,
                            Translation = "Evaluer"
                        },
                        new
                        {
                            Id = 16,
                            Didactical_Model_LevelId = 6,
                            LanguageId = 1,
                            Translation = "Create"
                        },
                        new
                        {
                            Id = 17,
                            Didactical_Model_LevelId = 6,
                            LanguageId = 2,
                            Translation = "Creëren"
                        },
                        new
                        {
                            Id = 18,
                            Didactical_Model_LevelId = 6,
                            LanguageId = 3,
                            Translation = "Créer"
                        },
                        new
                        {
                            Id = 19,
                            Didactical_Model_LevelId = 7,
                            LanguageId = 1,
                            Translation = "Low"
                        },
                        new
                        {
                            Id = 20,
                            Didactical_Model_LevelId = 7,
                            LanguageId = 2,
                            Translation = "Laag"
                        },
                        new
                        {
                            Id = 21,
                            Didactical_Model_LevelId = 7,
                            LanguageId = 3,
                            Translation = "Bas"
                        },
                        new
                        {
                            Id = 22,
                            Didactical_Model_LevelId = 8,
                            LanguageId = 1,
                            Translation = "Average"
                        },
                        new
                        {
                            Id = 23,
                            Didactical_Model_LevelId = 8,
                            LanguageId = 2,
                            Translation = "Gemiddeld"
                        },
                        new
                        {
                            Id = 24,
                            Didactical_Model_LevelId = 8,
                            LanguageId = 3,
                            Translation = "Moyenne"
                        },
                        new
                        {
                            Id = 25,
                            Didactical_Model_LevelId = 9,
                            LanguageId = 1,
                            Translation = "High"
                        },
                        new
                        {
                            Id = 26,
                            Didactical_Model_LevelId = 9,
                            LanguageId = 2,
                            Translation = "Hoog"
                        },
                        new
                        {
                            Id = 27,
                            Didactical_Model_LevelId = 9,
                            LanguageId = 3,
                            Translation = "Haute"
                        });
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Didactical_Model_Translation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Didactical_ModelId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Translation")
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Didactical_ModelId");

                    b.HasIndex("LanguageId");

                    b.ToTable("tbl_didactical_model_translations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Didactical_ModelId = 1,
                            LanguageId = 1,
                            Translation = "Bloom's taxonomy"
                        },
                        new
                        {
                            Id = 2,
                            Didactical_ModelId = 1,
                            LanguageId = 2,
                            Translation = "Taxonomie van Bloom"
                        },
                        new
                        {
                            Id = 3,
                            Didactical_ModelId = 1,
                            LanguageId = 3,
                            Translation = "Taxonomie de Bloom"
                        },
                        new
                        {
                            Id = 4,
                            Didactical_ModelId = 2,
                            LanguageId = 1,
                            Translation = "EVA model"
                        },
                        new
                        {
                            Id = 5,
                            Didactical_ModelId = 2,
                            LanguageId = 2,
                            Translation = "EVA model"
                        },
                        new
                        {
                            Id = 6,
                            Didactical_ModelId = 2,
                            LanguageId = 3,
                            Translation = "Le Modèle EVA"
                        });
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Difficulty_Level", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("tbl_difficulty_levels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Explorer",
                            Number = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Adventurer",
                            Number = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Expert",
                            Number = 3
                        },
                        new
                        {
                            Id = 4,
                            Name = "Master",
                            Number = 4
                        });
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Difficulty_Level_Translation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Difficulty_LevelId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Translation")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Difficulty_LevelId");

                    b.HasIndex("LanguageId");

                    b.ToTable("tbl_difficulty_level_translations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Difficulty_LevelId = 1,
                            LanguageId = 1,
                            Translation = "Explorer"
                        },
                        new
                        {
                            Id = 2,
                            Difficulty_LevelId = 2,
                            LanguageId = 2,
                            Translation = "Explorer"
                        },
                        new
                        {
                            Id = 3,
                            Difficulty_LevelId = 3,
                            LanguageId = 3,
                            Translation = "Explorer"
                        },
                        new
                        {
                            Id = 4,
                            Difficulty_LevelId = 1,
                            LanguageId = 1,
                            Translation = "Adventurer"
                        },
                        new
                        {
                            Id = 5,
                            Difficulty_LevelId = 2,
                            LanguageId = 3,
                            Translation = "Adventurer"
                        },
                        new
                        {
                            Id = 6,
                            Difficulty_LevelId = 3,
                            LanguageId = 3,
                            Translation = "Aventurier"
                        },
                        new
                        {
                            Id = 7,
                            Difficulty_LevelId = 1,
                            LanguageId = 1,
                            Translation = "Expert"
                        },
                        new
                        {
                            Id = 8,
                            Difficulty_LevelId = 2,
                            LanguageId = 2,
                            Translation = "Expert"
                        },
                        new
                        {
                            Id = 9,
                            Difficulty_LevelId = 3,
                            LanguageId = 3,
                            Translation = "Expert"
                        },
                        new
                        {
                            Id = 10,
                            Difficulty_LevelId = 1,
                            LanguageId = 1,
                            Translation = "Master"
                        },
                        new
                        {
                            Id = 11,
                            Difficulty_LevelId = 2,
                            LanguageId = 2,
                            Translation = "Master"
                        },
                        new
                        {
                            Id = 12,
                            Difficulty_LevelId = 3,
                            LanguageId = 3,
                            Translation = "Maître"
                        });
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Native_Name")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Native_Name")
                        .IsUnique();

                    b.ToTable("tbl_languages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "EN",
                            Native_Name = "English"
                        },
                        new
                        {
                            Id = 2,
                            Code = "NL",
                            Native_Name = "Dutch"
                        },
                        new
                        {
                            Id = 3,
                            Code = "FR",
                            Native_Name = "French"
                        });
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Language_Translation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Translation")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<int>("Translation_LanguageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("Translation_LanguageId");

                    b.ToTable("tbl_language_translations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LanguageId = 1,
                            Translation = "Engels",
                            Translation_LanguageId = 2
                        },
                        new
                        {
                            Id = 2,
                            LanguageId = 1,
                            Translation = "Anglais",
                            Translation_LanguageId = 3
                        },
                        new
                        {
                            Id = 3,
                            LanguageId = 2,
                            Translation = "Dutch",
                            Translation_LanguageId = 1
                        },
                        new
                        {
                            Id = 4,
                            LanguageId = 2,
                            Translation = "Néerlandais",
                            Translation_LanguageId = 3
                        },
                        new
                        {
                            Id = 5,
                            LanguageId = 3,
                            Translation = "French",
                            Translation_LanguageId = 1
                        },
                        new
                        {
                            Id = 6,
                            LanguageId = 3,
                            Translation = "Frans",
                            Translation_LanguageId = 2
                        },
                        new
                        {
                            Id = 7,
                            LanguageId = 1,
                            Translation = "English",
                            Translation_LanguageId = 1
                        },
                        new
                        {
                            Id = 8,
                            LanguageId = 2,
                            Translation = "Nederlands",
                            Translation_LanguageId = 2
                        },
                        new
                        {
                            Id = 9,
                            LanguageId = 3,
                            Translation = "Français",
                            Translation_LanguageId = 3
                        });
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Office_Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("tbl_office_applications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Access"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Excel"
                        },
                        new
                        {
                            Id = 3,
                            Name = "OneNote"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Outlook"
                        },
                        new
                        {
                            Id = 5,
                            Name = "PowerPoint"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Word"
                        });
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Creation_timestamp")
                        .HasColumnType("date");

                    b.Property<int>("Instruction_LanguageId")
                        .HasColumnType("integer");

                    b.Property<ulong>("Is_Master_Question")
                        .HasColumnType("bit");

                    b.Property<int?>("Master_QuestionId")
                        .HasColumnType("integer");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<int>("Office_ApplicationId")
                        .HasColumnType("integer");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Question_Formulation_TypeId")
                        .HasColumnType("integer");

                    b.Property<int>("Question_TypeId")
                        .HasColumnType("integer");

                    b.Property<string>("ReplicationKey")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("UserInterface_LanguageId")
                        .HasColumnType("integer");

                    b.Property<int>("Version_Number")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Instruction_LanguageId");

                    b.HasIndex("Master_QuestionId");

                    b.HasIndex("Office_ApplicationId");

                    b.HasIndex("Question_Formulation_TypeId");

                    b.HasIndex("Question_TypeId");

                    b.HasIndex("ReplicationKey")
                        .IsUnique();

                    b.HasIndex("UserInterface_LanguageId");

                    b.ToTable("tbl_questions");
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.QuestionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.HasKey("Id");

                    b.ToTable("tbl_questiontypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "True/false question"
                        });
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.QuestionType_Translation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Translation")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("QuestionTypeId");

                    b.ToTable("tbl_questiontype_translations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LanguageId = 1,
                            QuestionTypeId = 1,
                            Translation = "True/false question"
                        },
                        new
                        {
                            Id = 2,
                            LanguageId = 2,
                            QuestionTypeId = 1,
                            Translation = "Waar/onwaar vraag"
                        },
                        new
                        {
                            Id = 3,
                            LanguageId = 3,
                            QuestionTypeId = 1,
                            Translation = "Vrai/faux question"
                        });
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Question_Content_Theme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Content_ThemeId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Content_ThemeId");

                    b.HasIndex("QuestionId");

                    b.ToTable("tbl_question_content_themes");
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Question_Formulation_Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("tbl_question_formulation_types");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Open"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Semi-open"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Closed"
                        });
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Question_Formulation_Type_Translation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int>("Question_Formulation_TypeId")
                        .HasColumnType("int");

                    b.Property<string>("Translation")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("Question_Formulation_TypeId");

                    b.ToTable("tbl_question_formulation_type_translations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LanguageId = 1,
                            Question_Formulation_TypeId = 1,
                            Translation = "Open"
                        },
                        new
                        {
                            Id = 2,
                            LanguageId = 2,
                            Question_Formulation_TypeId = 1,
                            Translation = "Open"
                        },
                        new
                        {
                            Id = 3,
                            LanguageId = 3,
                            Question_Formulation_TypeId = 1,
                            Translation = "Ouverte"
                        },
                        new
                        {
                            Id = 4,
                            LanguageId = 1,
                            Question_Formulation_TypeId = 2,
                            Translation = "Semi-open"
                        },
                        new
                        {
                            Id = 5,
                            LanguageId = 2,
                            Question_Formulation_TypeId = 2,
                            Translation = "Half-open"
                        },
                        new
                        {
                            Id = 6,
                            LanguageId = 3,
                            Question_Formulation_TypeId = 2,
                            Translation = "Semi-ouverte"
                        },
                        new
                        {
                            Id = 7,
                            LanguageId = 1,
                            Question_Formulation_TypeId = 3,
                            Translation = "Closed"
                        },
                        new
                        {
                            Id = 8,
                            LanguageId = 2,
                            Question_Formulation_TypeId = 3,
                            Translation = "Gesloten"
                        },
                        new
                        {
                            Id = 9,
                            LanguageId = 3,
                            Question_Formulation_TypeId = 3,
                            Translation = "Fermée"
                        });
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Question_Learninggoal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Didactical_Model_LevelId")
                        .HasColumnType("integer");

                    b.Property<ulong>("Is_Measurable")
                        .HasColumnType("bit");

                    b.Property<string>("Learninggoal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<int>("QuestionId")
                        .HasColumnType("integer");

                    b.Property<int>("Sortorder")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Didactical_Model_LevelId");

                    b.HasIndex("QuestionId")
                        .IsUnique();

                    b.ToTable("tbl_question_learninggoals");
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Question_Pre_Knowledge_Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("integer");

                    b.Property<string>("Skill")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Sortorder")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId")
                        .IsUnique();

                    b.ToTable("tbl_question_pre_knowledge_skills");
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Quiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Creation_Timestamp")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Default_Minimum_Score")
                        .HasColumnType("decimal(12,7)");

                    b.Property<TimeSpan>("Default_Time_Limit")
                        .HasColumnType("time");

                    b.Property<string>("Identification_Code")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Instruction_Language_Id")
                        .HasColumnType("integer");

                    b.Property<string>("Intro")
                        .HasColumnType("text");

                    b.Property<int>("Office_Application_Id")
                        .HasColumnType("integer");

                    b.Property<Guid>("ReplicationKey")
                        .HasColumnType("char(36)");

                    b.Property<string>("Short_Intro")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Userinterface_Language_Id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ReplicationKey")
                        .IsUnique();

                    b.HasIndex("Office_Application_Id", "Identification_Code")
                        .IsUnique();

                    b.ToTable("tbl_quizzes");
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Quiz_Question", b =>
                {
                    b.Property<int>("Quiz_Id")
                        .HasColumnType("int")
                        .HasMaxLength(11)
                        .IsUnicode(false);

                    b.Property<int>("Question_Id")
                        .HasColumnType("int")
                        .HasMaxLength(11)
                        .IsUnicode(false);

                    b.Property<int>("Sortorder")
                        .HasColumnType("int")
                        .HasMaxLength(11)
                        .IsUnicode(false);

                    b.HasKey("Quiz_Id", "Question_Id");

                    b.HasIndex("Quiz_Id", "Sortorder")
                        .IsUnique();

                    b.ToTable("tbl_quiz_questions");
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Display_Label")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("tbl_roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Display_Label = "Admin",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Display_Label = "User",
                            Name = "User"
                        });
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Firstname")
                        .HasColumnType("varchar(70)");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Lastname")
                        .HasColumnType("varchar(70)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(400)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(400)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("LanguageId");

                    b.ToTable("tbl_users");
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.User_Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_user_roles");
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Content_Element_Type_Translation", b =>
                {
                    b.HasOne("E4Progress.DAL.Entities.Content_Element_Type", "Content_Element_Type")
                        .WithMany("Content_Element_Type_Translations")
                        .HasForeignKey("Content_Element_TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E4Progress.DAL.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Content_Theme_Translation", b =>
                {
                    b.HasOne("E4Progress.DAL.Entities.Content_Theme", "Content_Theme")
                        .WithMany("Content_Theme_Translations")
                        .HasForeignKey("Content_ThemeId");

                    b.HasOne("E4Progress.DAL.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Course", b =>
                {
                    b.HasOne("E4Progress.DAL.Entities.Language", "Instruction_Language")
                        .WithMany()
                        .HasForeignKey("Instruction_LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E4Progress.DAL.Entities.Office_Application", "Office_Application")
                        .WithMany()
                        .HasForeignKey("Office_ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E4Progress.DAL.Entities.Language", "UserInterface_Language")
                        .WithMany()
                        .HasForeignKey("UserInterface_LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Course_Module", b =>
                {
                    b.HasOne("E4Progress.DAL.Entities.Course", "Course")
                        .WithMany("Course_Modules")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Course_Module_Topic", b =>
                {
                    b.HasOne("E4Progress.DAL.Entities.Course_Module", "Course_Module")
                        .WithMany()
                        .HasForeignKey("Course_ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Course_Module_Topic_Element", b =>
                {
                    b.HasOne("E4Progress.DAL.Entities.Content_Element_Type", "Content_Element_Type")
                        .WithMany("Course_Module_Topic_Elements")
                        .HasForeignKey("Content_Element_TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E4Progress.DAL.Entities.Course_Module_Topic", "Course_Module_Topic")
                        .WithMany()
                        .HasForeignKey("Course_Module_TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E4Progress.DAL.Entities.Difficulty_Level", "Difficulty_Level")
                        .WithMany("Course_Module_Topic_Elements")
                        .HasForeignKey("Difficulty_LevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Didactical_Model_Level", b =>
                {
                    b.HasOne("E4Progress.DAL.Entities.Didactical_Model", "Didactical_Model")
                        .WithMany()
                        .HasForeignKey("Didactical_ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Didactical_Model_Level_Translation", b =>
                {
                    b.HasOne("E4Progress.DAL.Entities.Didactical_Model_Level", "Didactical_Model_Level")
                        .WithMany()
                        .HasForeignKey("Didactical_Model_LevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E4Progress.DAL.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Didactical_Model_Translation", b =>
                {
                    b.HasOne("E4Progress.DAL.Entities.Didactical_Model", "Didactical_Model")
                        .WithMany()
                        .HasForeignKey("Didactical_ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E4Progress.DAL.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Difficulty_Level_Translation", b =>
                {
                    b.HasOne("E4Progress.DAL.Entities.Difficulty_Level", "Difficulty_Level")
                        .WithMany("Difficulty_Level_Translations")
                        .HasForeignKey("Difficulty_LevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E4Progress.DAL.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Language_Translation", b =>
                {
                    b.HasOne("E4Progress.DAL.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E4Progress.DAL.Entities.Language", "Translation_Language")
                        .WithMany()
                        .HasForeignKey("Translation_LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Question", b =>
                {
                    b.HasOne("E4Progress.DAL.Entities.Language", "Instruction_Language")
                        .WithMany()
                        .HasForeignKey("Instruction_LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E4Progress.DAL.Entities.Question", "Master_Question")
                        .WithMany()
                        .HasForeignKey("Master_QuestionId");

                    b.HasOne("E4Progress.DAL.Entities.Office_Application", "Office_Application")
                        .WithMany()
                        .HasForeignKey("Office_ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E4Progress.DAL.Entities.Question_Formulation_Type", "Question_Formulation_Type")
                        .WithMany()
                        .HasForeignKey("Question_Formulation_TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E4Progress.DAL.Entities.QuestionType", "Question_Type")
                        .WithMany()
                        .HasForeignKey("Question_TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E4Progress.DAL.Entities.Language", "UserInterface_Language")
                        .WithMany()
                        .HasForeignKey("UserInterface_LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.QuestionType_Translation", b =>
                {
                    b.HasOne("E4Progress.DAL.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E4Progress.DAL.Entities.QuestionType", "QuestionType")
                        .WithMany()
                        .HasForeignKey("QuestionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Question_Content_Theme", b =>
                {
                    b.HasOne("E4Progress.DAL.Entities.Content_Theme", "Content_Theme")
                        .WithMany("Question_Content_Themes")
                        .HasForeignKey("Content_ThemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E4Progress.DAL.Entities.Question", "Question")
                        .WithMany("Question_Content_Themes")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Question_Formulation_Type_Translation", b =>
                {
                    b.HasOne("E4Progress.DAL.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E4Progress.DAL.Entities.Question_Formulation_Type", "Question_Formulation_Type")
                        .WithMany()
                        .HasForeignKey("Question_Formulation_TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Question_Learninggoal", b =>
                {
                    b.HasOne("E4Progress.DAL.Entities.Didactical_Model_Level", "Didactical_Model_Level")
                        .WithMany()
                        .HasForeignKey("Didactical_Model_LevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E4Progress.DAL.Entities.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.Question_Pre_Knowledge_Skill", b =>
                {
                    b.HasOne("E4Progress.DAL.Entities.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.User", b =>
                {
                    b.HasOne("E4Progress.DAL.Entities.Language", "language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E4Progress.DAL.Entities.User_Role", b =>
                {
                    b.HasOne("E4Progress.DAL.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E4Progress.DAL.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
